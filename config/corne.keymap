/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#define RIGHT 2
#define LEFT 1
#define MOUSE 3

/ {
    conditional_layers {
        compatible = "zmk,conditional-layers";
        tri_layer {
            if-layers = <LEFT RIGHT>;
            then-layer = <MOUSE>;
        };
    };
};

/ {
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | SHFT |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | CTRL |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&kp TAB     &kp Q               &kp W           &kp E     &kp R     &kp T        &kp Y    &kp U          &kp I      &kp O                &kp P                     &kp ESC
&kp LSHIFT  &mt LEFT_SHIFT A    &kp S           &kp D     &kp F     &kp G        &kp H    &kp J          &kp K      &kp L                &mt LEFT_SHIFT SEMICOLON  &kp SQT
&kp LCTRL   &mt LEFT_CONTROL Z  &mt LEFT_ALT X  &kp C     &kp V     &kp B        &kp N    &kp M          &kp COMMA  &mt LEFT_ALT PERIOD  &mt LCTRL SLASH           &kp RIGHT_ALT
                                                &kp LGUI  &mo LEFT  &kp SPACE  &kp RET  &mo RIGHT          &kp BACKSPACE
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |      |  !  |  @  |  #  |  $  |    %     |   |  ^  |  &  |  *  |  (  |  )  |   \   |
            // |      |  1  |  2  |  3  |  4  |    5     |   |  -  |  =  |  `  |  [  |  ]  |  "|"  |
            // | SHFT |  6  |  7  |  8  |  9  |    0     |   |  _  |  +  |  ~  |  {  |  }  | RSHFT |
            //                     | GUI |     | ALT/ENT |   | HYPER/SPACE | BKSP |    |

            bindings = <
&trans     &kp EXCL  &kp AT  &kp HASH  &kp DLLR  &kp PRCNT    &kp CARET   &kp AMPS   &kp ASTERISK  &kp LPAR  &kp RPAR  &kp BSLH
&trans     &kp N1    &kp N2  &kp N3    &kp N4    &kp N5       &kp MINUS   &kp EQUAL  &kp GRAVE     &kp LBKT  &kp RBKT  &kp PIPE
&kp LSHFT  &kp N6    &kp N7  &kp N8    &kp N9    &kp N0       &kp UNDER   &kp PLUS   &kp TILDE     &kp LBRC  &kp RBRC  &kp RSHFT
                             &kp LGUI  &trans    &kp SPACE    &kp RETURN  &trans    &kp BSPC   
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |       |  F1  |  F2  |  F3  |  F4  |  F5 |            |  F6  |  F7  |  F8  |  F9  |  F10  |   |
            // |       | Prev | Next | Vol - | Vol + | Play/Pause |   |      | LFT | DWN |  UP | RGT |     |     |
            // | BTCLR | BT1 | BT2 | BT3 | BT4 | BT5 |   |            |     |     |     |     |     |     |
            //                    |     |     |    |                  |     |     |     |

            bindings = <
&trans        &kp F1        &kp F2        &kp F3        &kp F4        &kp F5          &kp F6    &kp F7    &kp F8  &kp F9     &kp F10  &trans
&kp CAPSLOCK  &kp C_PREV    &kp C_NEXT    &kp C_VOL_DN  &kp C_VOL_UP  &kp C_PP        &kp LEFT  &kp DOWN  &kp UP  &kp RIGHT  &trans   &trans
&bt BT_CLR    &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &trans    &trans    &trans  &trans     &trans   &trans
                                          &trans        &trans        &trans          &trans    &trans    &trans
            >;
        };

        tri {
            bindings = <
&trans  &trans            &trans        &trans        &trans  &trans    &trans     &mwh SCROLL_UP  &mmv MOVE_UP    &mwh SCROLL_DOWN  &trans  &trans
&trans  &kp LEFT_SHIFT    &trans        &trans        &trans  &trans    &trans     &mmv MOVE_LEFT  &mmv MOVE_DOWN  &mmv MOVE_RIGHT   &trans  &trans
&trans  &kp LEFT_CONTROL  &kp LEFT_ALT  &kp LEFT_GUI  &trans  &trans    &trans     &trans          &trans          &trans            &trans  &trans
                                        &trans        &trans  &trans    &mkp LCLK  &mkp MCLK       &mkp RCLK
            >;
        };
    };
};
